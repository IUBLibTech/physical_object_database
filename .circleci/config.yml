# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.6.5-node-browsers
         environment:
         - RAILS_ENV: test
         - RACK_ENV: test
         - MYSQL_HOST: 127.0.0.1
         - PGUSER: physical_object_database

       - image: circleci/mysql:5.7
         environment:
         - MYSQL_ROOT_HOST: 127.0.0.1
         - POD_USER: physical_object_database
         - POD_DB: physical_object_database_test
         - POD_PASSWORD: ""
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install capybara-webkit
          command: |
            sudo apt-get update
            sudo apt-get install -y software-properties-common
            sudo apt install -y gcc g++ make qt5-default libqt5webkit5-dev ruby-dev zlib1g-dev

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        
      # Database setup
      - run: cp .circleci/circle.database.yml config/database.yml
      - run: cp .circleci/circle.secrets.yml config/secrets.yml
      - run: bundle update rake
      - run: bundle install
      - run: bundle exec rake db:create RAILS_ENV=test
      - run: bundle exec rake db:schema:load RAILS_ENV=test
      - run: bundle exec rake db:seed_data RAILS_ENV=test

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
            bundle exec rspec --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
