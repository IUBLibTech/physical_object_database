<% # the amount of text for the title to display in trucated mode %>
<% title_limit=42 %>
<%# add pagination links only if @physical_objects has been paginated %>
<% if @physical_objects.respond_to?(:total_pages) %>
<div class="pagination">
  <div class="page_info">
    <%= page_entries_info @physical_objects, model: "records" %> 
  </div>
  <%= will_paginate @physical_objects, container: false %>
</div>
<% end %>
<table id="po_list">
  <tr class="header">
    <% unless @group_key.nil? %>
    <th>Position</th>
    <th>Picklist</th>
    <% end %>
    <th>Current Status</th>
    <th>MDPI barcode</th>
    <th>Call number</th>
    <th>Title</th>
    <th>Format</th>
    <th>Unit</th>
    <th>Actions</th>
  </tr>
  <% count = 1 %>
  <% unless @physical_objects.nil? %>
  <% @physical_objects.each do |po| %>
  <% css_class = "#{(po.bin or po.box) ? (count.odd? ? 'faded odd' : 'faded even') : (count.odd? ? 'odd' : 'even')}" %>
  <tr class='<%= css_class %>'>

    <% unless @group_key.nil? %>
    <td><%= po.group_position %></td>
    <td>
     <% unless po.picklist.nil? %>
     <%= po.picklist.name %>
     <%= link_to "Remove", unpick_physical_object_path(po.id), method: :post, data: { confirm: "This will remove the physical object, and all other physical objects in the same Group Key, from the picklist.  Are you sure?"} if policy(po).unpick? %>
     <% end %>
   </td>
   <% end %>
   <td><%= po.display_workflow_status %></td>
   <td><%= po.mdpi_barcode %></td>
   <td><%= po.call_number %></td>
   <td title="<%= po.title.to_s.length <= title_limit ? "" : po.title %>"><%= po.title.to_s.length <= title_limit ? po.title : po.title[0,title_limit - 3] + '...'%></td>
   <td><%= po.format %></td>
   <td><%= po.unit.abbreviation %></td>
   <td class="po_links">
    <%= link_to("Show", po, class: 'action show') if policy(po).show? %>
    <%= link_to("Edit", edit_physical_object_path(po), :class => 'action edit') if policy(po).edit? %>
    <% if @bin.nil? && @box.nil? && @picklist.nil? && @group_key.nil? %>
      <% if po.box.nil? && po.bin.nil? %>
        <%= link_to("Split", split_show_physical_object_path(po), :class => 'action split') if policy(po).split_show?%>
      <% else %>
        <strong><strike>Split</strike></strong>
      <% end %>
      <%= link_to("Delete", physical_object_path(po.id), method: :delete, data: {confirm: 'Are you sure you want to delete this Physical Object?'}) if policy(po).destroy?%>
      <% elsif (!@bin.nil? and po.box.nil?) %>
        <%= link_to("Remove", unbin_physical_object_path(po), method: :post, data: {confirm: 'Are you sure you want to remove this Physical Object from the Bin?'}) if policy(po).unpick? %>
      <% elsif !@box.nil? %>
        <%= link_to("Remove", unbox_physical_object_path(po), method: :post, data: {confirm: 'Are you sure you want to remove this Physical Object from the Box?'}) if policy(po).unbox? %>
      <% elsif !@picklist.nil? %>
        <%= link_to("Remove", unpick_physical_object_path(po), method: :post, data: {confirm: 'Are you sure you want to remove this Physical Object, and all other objects in the same Group Key, from the Picklist?'}) if policy(po).unpick? %>
      <% elsif !@group_key.nil? %>
        <%= link_to("Remove", ungroup_physical_object_path(po), method: :post, data: {confirm: 'Are you sure you want to remove this Physical Object from the Group Key?'}) if policy(po).ungroup? %>
    <% end %>
    <% if policy(po.ensure_digiprov).show? %>
      <br/>
      Digiprov: <%= link_to("Show", digital_provenance_path(po.id), class: 'action show') %>
      <%= link_to("Edit", edit_digital_provenance_path(po.id), :class => 'action edit') if policy(po.ensure_digiprov).edit? %>
      <br/>
    <% end %>
    <% if (@search && !po.staging_requested) %>
      <div id='div_<%= "stage_#{po.id}" %>' class="inline">| <%= link_to("Stage",  quality_control_ajax_stage_path(po.id), method: :post, remote: true, id: "stage_#{po.id}", class: 'stage_link', data: { type: :json }) if policy(:quality_control).stage? %></div>
    <% end %>
    <% if po.current_digital_status and po.current_digital_status.decided.nil? %>
      <div class="top_red">
        Status: <%= po.current_digital_status.state %>
        <%= form_for(po.current_digital_status, url: quality_control_decide_path(po.current_digital_status)) do |f|%>
          <%= select_tag(:decided, options_for_select(po.current_digital_status.select_options.sort)) %>
          <%= f.submit("Decide") %>
        <% end %>
      </div>
    <% end %>
  </td>
</tr>
<% count += 1 %>
<% end %>
<% end %>
</table>
<script type="text/javascript">
  $('.stage_link').bind('ajax:complete', function(event, xhr, settings) {
    alert(xhr.responseJSON[1]);
    if (xhr.responseJSON[0] == true) {
      sel = "#div_"+$(this).attr("id")
      $(sel).remove();
    }
  });
</script>
<%= will_paginate @physical_objects if @physical_objects.respond_to?(:total_pages) %>
