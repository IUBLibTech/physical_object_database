<div class="left">
	<%= nested_form_for(@dp, url: {controller: 'digital_provenance', action: 'update'}) do |dp| %>
		<div>
			<h2>Digital Provenance</h2>
				<% if @edit_mode %>
					<%= dp.submit "Update Digital Provenance" %>
				<% end %>
			<%= dp.hidden_field :digitizing_entity, value: "IU Media Digitization Studios" %>
			<table>
				<tr>
					<th rowspan="4">Comments<%= dp_requirement(:comments) %></th>
					<td rowspan="4">
						<%= dp.text_area(:comments, rows: "6", readonly: !@edit_mode, disabled: dp_na(:comments)) %>
					</td>
					<th rowspan="4">Cleaning Comment<%= dp_requirement(:cleaning_comment) %></th>
					<td rowspan="4">
						<%= dp.text_area(:cleaning_comment, rows: "6", readonly: !@edit_mode, disabled: dp_na(:cleaning_comment)) %>
					</td>
					<th>Cleaning Date<%= dp_requirement(:cleaning_date) %></th>
					<td>
						<%= dp.text_field(:cleaning_date, readonly: !@edit_mode, class: @edit_mode ? "date" : "", value: @dp.cleaning_date.blank? ? "" : @dp.cleaning_date.in_time_zone("UTC").strftime("%m/%d/%Y"), disabled: dp_na(:cleaning_date)) %>
					</td>
				</tr>
				<tr>
					<th>Baking Date<%= dp_requirement(:baking) %></th>
					<td>
						<%= dp.text_field(:baking, readonly: !@edit_mode, class: @edit_mode ? "date" : "", value: @dp.baking.blank? ? "" : @dp.baking.in_time_zone("UTC").strftime("%m/%d/%Y"), disabled: dp_na(:baking)) %>
					</td>
				</tr>
				<tr>
					<th>Repaired<%= dp_requirement(:repaired) %></th>
					<td>
						<%= dp.check_box(:repaired, readonly: !@edit_mode || dp_na(:repaired)) %>
					</td>
				</tr>
				<tr>
					<th>Digitization Time (in minutes)<%= dp_requirement(:duration) %></th>
					<td>
						<% if @edit_mode %>
						  <%= dp.number_field(:duration, readonly: !@edit_mode, disabled: dp_na(:duration)) %>
						<% else %>
						  <%= dp.text_field(:duration, readonly: !@edit_mode, disabled: dp_na(:duration)) %>
						<% end %>
					</td>
				</tr>
				<tr>
					<th>Batch Processing Flag<%= dp_requirement(:batch_processing_flag) %></th>
					<td colspan="5">
						<%= dp.text_field(:batch_processing_flag, readonly: !@edit_mode, disabled: dp_na(:batch_processing_flag)) %>
					</td>
				</tr>
			</table>				
		</div>
		<%# the fields for kluge %>
		<% dp.fields_for :physical_object do |df| %>
		<% end %>
		<div id="file_holder">
			<h2>Digital Files</h2>
			<% if @dp.digital_file_provenances.size == 0 and !@edit_mode %>
				Digital files have not been received yet...
			<% else %>
				<%= dp.fields_for :digital_file_provenances do |df| %>
					<%= render 'digital_provenance/digital_file_provenance', f: df, dp: dp %>
				<% end %>
			<% end %>
		</div>
    <div class="clear">
      <% if @edit_mode && policy(@dp).edit? %>
        <%= dp.link_to_add "Add Digital Master File", :digital_file_provenances, :data => { :target => "#file_holder" } if policy(@dp).edit? %>
        &nbsp-&nbsp
        <%= dp.link_to_add "Add PresInt File", :digital_file_provenances, :data => { :target => "#file_holder" } if policy(@dp).edit? %>
        <% if @dp.physical_object.format == 'Cylinder' %>
          &nbsp-&nbsp
          <%= dp.link_to_add "Add PresRef File", :digital_file_provenances, :data => { :target => "#file_holder" } if policy(@dp).edit? %>
        <% end %>
      <% end %>
    </div>
	<% end %>
	<div class="clear">
		<h2>Digital Statuses</h2>
	</div>

	<script type='text/javascript'>
		$(function (){
			$('.date').datepicker();
		});
		$(document).on('nested:fieldAdded', function(event){
			var ext = <%= (TechnicalMetadatumModule.tm_genres[@physical_object.format] == :audio ? "'wav'" : "'mkv'").html_safe%>;
			// the "Add Digital File/PrestInt" link
			var trig = event.currentTarget.activeElement;
			el = $('.filename').last();
			var v = "";
			if ( el.val().length == 0) {
				bc = $("#barcode").first().text();
				if (trig.text == "Add Digital Master File") {
					var visibleMasterTables = $('.fields').filter(function() {
						return this.style.display != 'none';
					});
					visibleMasterTables = $(visibleMasterTables).find('.filename').filter(function() {
						return this.value.indexOf('_pres.') != -1;
					});
					var fn = $(visibleMasterTables);
					var pattern = "_[0-9]{2}_";
					var seq = fn.length > 0 ? fn.last().val().substring(fn.last().val().search(pattern)+1, fn.last().val().search(pattern)+3) : "00";
					seq = ("000" + (parseFloat(seq) + 1)).slice(-2);
					//seq = ("000" + $(visibleMasterTables).last().val()).slice(-2);
					v = "MDPI_"+bc+"_"+seq+"_pres."+ext;
				} else if (trig.text == "Add PresRef File") {
                                        var visibleTables = $('.fields').filter(function () { return this.style.display != 'none'; });
                                        visibleTables = $(visibleTables).find('table.digiprov');
                                        var masterFilename = $('.digiprov')[$('.digiprov').length - 2].children[0].children[1].children[1].children[0].value
                                        var pattern = "_[0-9]{2}_";
                                        var seq = masterFilename.substring(masterFilename.search(pattern)+1, masterFilename.search(pattern)+3);
                                        v = "MDPI_"+bc+"_"+seq+"_presRef."+ext;

                                        //copy over all values from the master file.
                                        var copyTable = visibleTables[visibleTables.length - 2];
                                        var tds = $(copyTable).find('td > input');
                                        // because collection_select pads the options with a "select signal chain" - the index can be off when
                                        // the creating a presRef file from an existing/already saved master file. Determine whether to add one
                                        var add = $(copyTable).find('select > option').first()[0].firstChild.textContent.startsWith("Select a signal") ? 0 : 1;
                                        var selectIndex = $(copyTable).find('select').first().prop('selectedIndex') + add;
                                        for (x = 4; x <12; x++) {
                                        // exclude speed[4], stylus[9]
                                          if (x != 4 && x != 9) {

                                                val =  tds[x].value;
                                                $(visibleTables).last().find('td > input')[x].value = val;
                                          }
                                        }
                                        //add reference tone default value
                                        $(visibleTables).last().find('td > input')[14].value = '440';

                                        $(visibleTables).last().find('select option').eq(selectIndex).prop('selected', true);
                                        $(visibleTables).last().addClass('presRef');
                                } else {

					var visibleTables = $('.fields').filter(function () { return this.style.display != 'none'; });
					visibleTables = $(visibleTables).find('table.digiprov');
					var masterFilename = $('.digiprov')[$('.digiprov').length - 2].children[0].children[1].children[1].children[0].value
					var pattern = "_[0-9]{2}_";
					var seq = masterFilename.substring(masterFilename.search(pattern)+1, masterFilename.search(pattern)+3);
					v = "MDPI_"+bc+"_"+seq+"_presInt."+ext;

					//copy over all values from the master file.
					var copyTable = visibleTables[visibleTables.length - 2];
					var tds = $(copyTable).find('td > input');
					// because collection_select pads the options with a "select signal chain" - the index can be off when
					// the creating a presInt file from an existing/already saved master file. Determine whether to add one
					var add = $(copyTable).find('select > option').first()[0].firstChild.textContent.startsWith("Select a signal") ? 0 : 1;
					var selectIndex = $(copyTable).find('select').first().prop('selectedIndex') + add;
					for (x = 4; x <12; x++) {
						val =  tds[x].value;
						$(visibleTables).last().find('td > input')[x].value = val;
					}
					$(visibleTables).last().find('select option').eq(selectIndex).prop('selected', true);
					$(visibleTables).last().addClass('presInt');
				}
				el.val(v);
			}
		});
	</script>
</div>
